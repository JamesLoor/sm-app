{"version":3,"sources":["assets/img/Home.svg","assets/img/Patient.svg","assets/img/Schedule.svg","assets/img/Menu.svg","components/Common/SideBar.jsx","components/Common/Layout.jsx","redux/authDucks.js","utils/genService.js","services/auth.js","hooks/useAuth.js","components/Router/PrivateRoute.jsx","redux/patientDucks.js","redux/userDucks.js","redux/store.js","assets/img/avatar.svg","hooks/useDropdown.js","utils/capitalize.js","components/Common/Dropdown.jsx","components/Common/DropdownOption.jsx","components/Common/HeaderProfile.jsx","components/Common/Header.jsx","pages/Home/Home.jsx","components/Common/Input.jsx","components/Common/Button.jsx","components/Forms/LoginForm.jsx","pages/Login/Login.jsx","assets/img/magnifyingGlass.svg","services/patient.js","hooks/usePatient.js","components/Common/Search.jsx","components/Common/Modal.jsx","hooks/useModal.js","components/Common/Patient.jsx","components/Lists/PatientList.jsx","pages/Patient/Patient.jsx","assets/img/addImage.svg","components/Forms/PatientPhotoForm.jsx","components/Forms/PatientForm.jsx","pages/Patient/PatientNew.jsx","pages/Schedule/Schedule.jsx","App.jsx","pages/Error/Error404.jsx","index.js"],"names":["SideBarStyled","styled","div","props","isOpen","SideBar","history","useHistory","useState","sideBarOpen","setSideBarOpen","listen","location","className","type","onClick","c","src","Menu","alt","to","Home","Patient","Schedule","LayoutStyled","Layout","children","initialState","token","isAuth","isAuthFailed","isLoading","AUTH_LOADING","AUTH_SUCCES","AUTH_ERROR","AUTH_LOGOUT","actionAuthLogin","payload","genService","url","body","a","headers","Authorization","axios","caca","interceptors","response","use","status","console","log","baseUrl","process","getFullName","loginService","email","password","encode","window","btoa","post","useAuth","dispatch","useDispatch","useSelector","store","auth","isAuthLoading","tokenJWT","loginUser","user","result","data","message","logoutUser","PrivateRoute","Component","component","rest","render","prpTypes","PropTypes","node","isRequired","patientList","patientListByName","patientObtainedById","amountPatientToGet","numberPages","GET_PATIENT_LIST_SUCCESS","GET_PATIENT_LIST_ERROR","GET_PATIENT_LIST_LOADING","SET_PATIENT_LIST_BY_NAME","GET_PATIENT_SUCCESS","GET_PATIENT_ERROR","GET_PATIENT_LOADING","POST_PATIENT_SUCCESS","POST_PATIENT_ERROR","POST_PATIENT_LOADING","DELETE_PATIENT_SUCCESS","DELETE_PATIENT_ERROR","DELETE_PATIENT_LOADING","UPDATE_PATIENT_SUCCESS","UPDATE_PATIENT_ERROR","UPDATE_PATIENT_LOADING","actionGetPatientList","actionGetPatient","patient","actionPostPatient","newPatient","actionDeletePatient","id","fullName","isFailed","GET_FULLNAME_LOADING","GET_FULLNAME_SUCCES","GET_FULLNAME_ERROR","rootReducer","combineReducers","state","patients","filter","name","toLowerCase","includes","filteredPatientList","_id","composeEnhancers","composeWithDevTools","applyMiddleware","thunk","persistData","useDropdown","isDropdownOpen","setDropdownOpen","toggleDropdown","openDropdown","closeDropdown","capitalize","string","replace","m","p1","p2","toUpperCase","DropdownStyled","Dropdown","title","DropdownOptionStyled","li","DropdownOption","action","HeaderProfileStyled","HeaderProfile","useEffect","lastname","onOutsideClick","avatar","HeaderStyled","header","Header","HomeStyled","InputStyled","Input","label","error","touched","htmlFor","ButtonDefault","button","width","margin","ButtonError","ButtonIcon","ButtonIconError","Button","buttonType","switchButton","LoginFormStyled","LoginForm","validationSchema","Yup","required","formik","useFormik","initialValues","onSubmit","push","handleSubmit","placeholder","onChange","handleChange","value","values","errors","LoginStyled","Login","getPatientListService","amount","page","undefined","getPatientService","savePatientService","deletePatientService","usePatient","getPatientList","getPatient","createPatient","deletePatient","searchPatientByName","SearchStyled","Search","inputValue","setInputValue","lens","e","quest","target","ModalStyled","ModalWindow","ModalContainer","document","getElementById","Modal","isModalOpen","setModalOpen","modalbackground","useRef","ReactDOM","createPortal","ref","current","useModal","openModal","closeModal","toggleModal","PatientStyled","DNI","phone","onDoubleClick","stopPropagation","PatientListStyled","PatientList","isPatientListEmpty","length","patientListHTML","map","PatientPhotoFormStyled","image","PatientPhotoForm","onchange","file","setFile","refAddImage","preventDefault","files","URL","createObjectURL","addImage","Boolean","PatientFormStyled","PatientForm","min","max","DNIRepresentative","gender","birth","PatientNewStyled","PatientNew","ScheduleStyled","App","createStore","exact","path","StrictMode"],"mappings":"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","file":"static/js/main.fb23987b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Home.ce1e2036.svg\";","export default __webpack_public_path__ + \"static/media/Patient.6b1f1c89.svg\";","export default __webpack_public_path__ + \"static/media/Schedule.5537bdb1.svg\";","export default __webpack_public_path__ + \"static/media/Menu.99c0fde5.svg\";","import styled from 'styled-components'\r\nimport { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Home from '../../assets/img/Home.svg'\r\nimport Patient from '../../assets/img/Patient.svg'\r\nimport Schedule from '../../assets/img/Schedule.svg'\r\nimport Menu from '../../assets/img/Menu.svg'\r\n\r\nconst SideBarStyled = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: ${props => (props.isOpen ? '250px' : '60px')};\r\n  background-color: var(--main-color);\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  grid-template-rows: 60px min-content;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  transition: 0.4s;\r\n  box-shadow: var(--box-shadow-default);\r\n  overflow: hidden;\r\n  .sideBarHeader {\r\n    display: grid;\r\n    grid-template-columns: ${props =>\r\n      props.isOpen ? 'min-content min-content' : '1fr'};\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 17.5px;\r\n    background-color: var(--secundary-color);\r\n    height: 100%;\r\n  }\r\n  .sideBarLogo {\r\n    display: ${props => (props.isOpen ? 'block' : 'none')};\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: var(--text-white-color);\r\n  }\r\n  .nav {\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 100%;\r\n    grid-auto-flow: row;\r\n    & li {\r\n      width: 100%;\r\n      padding: 18px 17.5px;\r\n      border-bottom: 1px solid var(--text-white-color);\r\n    }\r\n    & li:last-child {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n  .menuHamburguer {\r\n    cursor: pointer;\r\n  }\r\n  .navLink {\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: ${props => (props.isOpen ? '25px 1fr' : '1fr')};\r\n    gap: ${props => (props.isOpen ? '15px' : '0')};\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .navLink img {\r\n    display: block;\r\n    margin: auto;\r\n  }\r\n  .navLinkText {\r\n    display: ${props => (props.isOpen ? 'block' : 'none')};\r\n    color: var(--text-white-color);\r\n    font-weight: 500;\r\n  }\r\n`\r\nconst SideBar = () => {\r\n  const history = useHistory()\r\n  const [sideBarOpen, setSideBarOpen] = useState(false)\r\n  const handleSideBar = () => {\r\n    setSideBarOpen(c => !c)\r\n  }\r\n\r\n  history.listen(location => {\r\n    if (location === history.location) setSideBarOpen(false)\r\n  })\r\n  return (\r\n    <SideBarStyled isOpen={sideBarOpen}>\r\n      <div className=\"sideBarHeader\">\r\n        <span className=\"sideBarLogo\">SMedit</span>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSideBar}\r\n          className=\"menuHamburguer\"\r\n        >\r\n          <img src={Menu} alt=\"Menu Hamburguesa\" />\r\n        </button>\r\n      </div>\r\n\r\n      <ul className=\"nav\">\r\n        <li>\r\n          <Link className=\"navLink\" to=\"/\">\r\n            <img src={Home} alt=\"Inicio\" />\r\n            <span className=\"navLinkText\">Inicio</span>\r\n          </Link>\r\n        </li>\r\n\r\n        <li>\r\n          <Link className=\"navLink\" to=\"/pacientes\">\r\n            <img src={Patient} alt=\"Pacientes\" />\r\n            <span className=\"navLinkText\">Pacientes</span>\r\n          </Link>\r\n        </li>\r\n\r\n        <li>\r\n          <Link className=\"navLink\" to=\"/agenda\">\r\n            <img src={Schedule} alt=\"Agenda\" />\r\n            <span className=\"navLinkText\">Agenda</span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </SideBarStyled>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport SideBar from './SideBar'\r\n\r\nconst LayoutStyled = styled.div`\r\n  main {\r\n    background-color: var(--background-main-color);\r\n    padding-left: 60px;\r\n  }\r\n`\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <LayoutStyled>\r\n      <SideBar />\r\n      <main>{children}</main>\r\n    </LayoutStyled>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default Layout\r\n","// Constants\r\nconst initialState = {\r\n  token: null,\r\n  isAuth: false,\r\n  isAuthFailed: false,\r\n  isLoading: false\r\n}\r\n\r\nconst AUTH_LOADING = 'AUTH_LOADING'\r\nconst AUTH_SUCCES = 'AUTH_SUCCES'\r\nconst AUTH_ERROR = 'AUTH_ERROR'\r\nconst AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\n// Reducer\r\nexport const authReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case AUTH_LOADING:\r\n      return { ...state, isLoading: true }\r\n    case AUTH_SUCCES:\r\n      return { ...state, isLoading: false, isAuth: true, token: payload }\r\n    case AUTH_ERROR:\r\n      return { ...initialState, isAuthFailed: true }\r\n    case AUTH_LOGOUT:\r\n      return { ...initialState }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Actions\r\nexport const actionAuthLogin = {\r\n  success: (token) => {\r\n    return {\r\n      type: AUTH_SUCCES,\r\n      payload: token\r\n    }\r\n  },\r\n  error: () => {\r\n    return {\r\n      type: AUTH_ERROR\r\n    }\r\n  },\r\n  loading: () => {\r\n    return {\r\n      type: AUTH_LOADING\r\n    }\r\n  }\r\n}\r\n\r\nexport const actionAuthLogout = () => {\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  }\r\n}\r\n","/* eslint-disable no-console */\r\nimport axios from 'axios'\r\n\r\n// const genService = (url, type, token, body) => {\r\n//   const headers = { Authorization: `Bearer ${token}` }\r\n//   if (body) {\r\n//     try {\r\n//       return axios[type](url, body, { headers })\r\n//     } catch (e) {\r\n//       console.log(e)\r\n//     }\r\n//   }\r\n//   try {\r\n//     return axios[type](url, { headers })\r\n//   } catch (e) {\r\n//     console.log(e)\r\n//   }\r\n//   return null\r\n// }\r\n\r\nconst genService = async (url, type, token, body) => {\r\n  const headers = { Authorization: `Bearer ${token}` }\r\n  if (body) {\r\n    try {\r\n      const caca = await axios[type](url, body, { headers })\r\n      await caca.interceptors.response.use(response => {\r\n        if (response.status === 401) console.log('caca')\r\n        return response\r\n      })\r\n      return caca\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n  try {\r\n    const caca = axios[type](url, { headers })\r\n    axios.interceptors.response.use(response => {\r\n      if (response.status === 401) console.log('caca')\r\n      return response\r\n    })\r\n    return caca\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return null\r\n}\r\n\r\n\r\n\r\nexport default genService\r\n","import axios from 'axios'\r\nimport genService from '../utils/genService'\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const getFullName = token => {\r\n  const url = `${baseUrl}/auth/me`\r\n  return genService(url, 'get', token)\r\n}\r\n\r\nexport const loginService = ({ email, password }) => {\r\n  if (email && password) {\r\n    const encode = window.btoa(`${email}:${password}`)\r\n    return axios.post(\r\n      `${baseUrl}/auth/sign-in`,\r\n      {},\r\n      {\r\n        headers: {\r\n          Authorization: `Basic ${encode}`,\r\n          'Content-type': 'application/json'\r\n        }\r\n      }\r\n    )\r\n  }\r\n  return axios.post(`${baseUrl}/auth/sign-in`, {})\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { actionAuthLogin, actionAuthLogout } from '../redux/authDucks'\r\nimport { loginService } from '../services/auth'\r\n\r\nconst useAuth = () => {\r\n  const dispatch = useDispatch()\r\n  const isAuth = useSelector((store) => store.auth.token)\r\n  const isAuthFailed = useSelector((store) => store.auth.isAuthFailed)\r\n  const isAuthLoading = useSelector((store) => store.auth.isLoading)\r\n  const tokenJWT = useSelector((store) => store.auth.token)\r\n\r\n  const loginUser = async (user) => {\r\n    dispatch(actionAuthLogin.loading())\r\n    try {\r\n      const result = await loginService(user)\r\n      const { token } = result.data.message\r\n      dispatch(actionAuthLogin.success(token))\r\n    } catch (error) {\r\n      dispatch(actionAuthLogin.error())\r\n    }\r\n  }\r\n\r\n  const logoutUser = () => {\r\n    dispatch(actionAuthLogout())\r\n  }\r\n\r\n  return {\r\n    isAuth,\r\n    isAuthFailed,\r\n    isAuthLoading,\r\n    loginUser,\r\n    logoutUser,\r\n    tokenJWT\r\n  }\r\n}\r\n\r\nexport default useAuth\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport useAuth from '../../hooks/useAuth'\r\n\r\n/*\r\n    |￣￣￣￣￣\r\n    | // TODO: Improve this\r\n    |＿＿＿_\r\n(\\__/)||\r\n(•ㅅ•)||\r\n/  づ\r\n*/\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { tokenJWT } = useAuth()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        tokenJWT ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.prpTypes = {\r\n  Component: PropTypes.node.isRequired\r\n}\r\n\r\nexport default PrivateRoute\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-case-declarations */\r\n// Constants\r\nconst initialState = {\r\n  patientList: [],\r\n  patientListByName: [],\r\n  patientObtainedById: null,\r\n  isLoading: false,\r\n  amountPatientToGet: null,\r\n  numberPages: null\r\n}\r\n\r\nconst GET_PATIENT_LIST_SUCCESS = 'GET_PATIENT_LIST_SUCCESS'\r\nconst GET_PATIENT_LIST_ERROR = 'GET_PATIENT_LIST_ERROR'\r\nconst GET_PATIENT_LIST_LOADING = 'GET_PATIENT_LIST_LOADING'\r\n\r\nconst SET_PATIENT_LIST_BY_NAME = 'SET_PATIENT_LIST_BY_NAME'\r\n\r\nconst GET_PATIENT_SUCCESS = 'GET_PATIENT_SUCCESS'\r\nconst GET_PATIENT_ERROR = 'GET_PATIENT_ERROR'\r\nconst GET_PATIENT_LOADING = 'GET_PATIENT_LOADING'\r\n\r\nconst POST_PATIENT_SUCCESS = 'POST_PATIENT_SUCCES'\r\nconst POST_PATIENT_ERROR = 'POST_PATIENT_ERROR'\r\nconst POST_PATIENT_LOADING = 'POST_PATIENT_LOADING'\r\n\r\nconst DELETE_PATIENT_SUCCESS = 'DELETE_PATIENT_SUCCES'\r\nconst DELETE_PATIENT_ERROR = 'DELETE_PATIENT_ERROR'\r\nconst DELETE_PATIENT_LOADING = 'DELETE_PATIENT_LOADING'\r\n\r\nconst UPDATE_PATIENT_SUCCESS = 'UPDATE_PATIENT_SUCCES'\r\nconst UPDATE_PATIENT_ERROR = 'UPDATE_PATIENT_ERROR'\r\nconst UPDATE_PATIENT_LOADING = 'UPDATE_PATIENT_LOADING'\r\n\r\nexport const patientReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_PATIENT_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        patientList: [...payload.patients],\r\n        numberPages: payload.numberPages\r\n      }\r\n    case GET_PATIENT_LIST_ERROR:\r\n      return { ...initialState }\r\n    case GET_PATIENT_LIST_LOADING:\r\n      return { ...state, isLoading: true }\r\n    case SET_PATIENT_LIST_BY_NAME:\r\n      const patientListByName = state.patientList.filter((patient) =>\r\n        patient.name.toLowerCase().includes(payload.toLowerCase())\r\n      )\r\n      return { ...state, patientListByName }\r\n\r\n    case GET_PATIENT_SUCCESS:\r\n      return { ...state, patientObtainedById: { ...payload } }\r\n    case GET_PATIENT_ERROR:\r\n      return { ...state }\r\n    case GET_PATIENT_LOADING:\r\n      return { ...state, isLoading: true }\r\n\r\n    case POST_PATIENT_SUCCESS:\r\n      return { ...state, patientList: [...state.patientList, payload] }\r\n    case POST_PATIENT_ERROR:\r\n      return { ...state }\r\n    case POST_PATIENT_LOADING:\r\n      return { ...state, isLoading: true }\r\n\r\n    case DELETE_PATIENT_SUCCESS:\r\n      const filteredPatientList = state.patientList.filter(\r\n        (patient) => patient._id !== payload\r\n      )\r\n      return { ...state, patientList: filteredPatientList }\r\n    case DELETE_PATIENT_ERROR:\r\n      return { ...state }\r\n    case DELETE_PATIENT_LOADING:\r\n      return { ...state }\r\n\r\n    case UPDATE_PATIENT_SUCCESS:\r\n      return { ...state }\r\n    case UPDATE_PATIENT_ERROR:\r\n      return { ...state }\r\n    case UPDATE_PATIENT_LOADING:\r\n      return { ...state, isLoading: true }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actionGetPatientList = {\r\n  success: (patientList) => {\r\n    return {\r\n      type: GET_PATIENT_LIST_SUCCESS,\r\n      payload: patientList\r\n    }\r\n  },\r\n  error: () => {\r\n    return {\r\n      type: GET_PATIENT_LIST_ERROR\r\n    }\r\n  },\r\n  loading: () => {\r\n    return {\r\n      type: GET_PATIENT_LIST_LOADING\r\n    }\r\n  }\r\n}\r\n\r\nexport const actionGetPatient = {\r\n  success: (patient) => {\r\n    return {\r\n      type: GET_PATIENT_SUCCESS,\r\n      payload: patient\r\n    }\r\n  },\r\n  error: () => {\r\n    return {\r\n      type: GET_PATIENT_ERROR\r\n    }\r\n  },\r\n  loading: () => {\r\n    return {\r\n      type: GET_PATIENT_LOADING\r\n    }\r\n  }\r\n}\r\n\r\nexport const actionPostPatient = {\r\n  success: (newPatient) => {\r\n    return {\r\n      type: POST_PATIENT_SUCCESS,\r\n      payload: newPatient\r\n    }\r\n  },\r\n  error: () => {\r\n    return {\r\n      type: POST_PATIENT_ERROR\r\n    }\r\n  },\r\n  loading: () => {\r\n    return {\r\n      type: POST_PATIENT_LOADING\r\n    }\r\n  }\r\n}\r\n\r\nexport const actionDeletePatient = {\r\n  success: (id) => {\r\n    return {\r\n      type: DELETE_PATIENT_SUCCESS,\r\n      payload: id\r\n    }\r\n  },\r\n  error: () => {\r\n    return {\r\n      type: DELETE_PATIENT_ERROR\r\n    }\r\n  },\r\n  loading: () => {\r\n    return {\r\n      type: DELETE_PATIENT_LOADING\r\n    }\r\n  }\r\n}\r\n\r\nexport const actionFilteredPatientByName = (nameToSearch) => {\r\n  return {\r\n    type: SET_PATIENT_LIST_BY_NAME,\r\n    payload: nameToSearch\r\n  }\r\n}\r\n","import { getFullName } from '../services/auth'\r\n\r\nconst initialState = {\r\n  fullName: null,\r\n  isLoading: false,\r\n  isFailed: false\r\n}\r\n\r\nconst GET_FULLNAME_LOADING = 'GET_FULLNAME_LOADING'\r\nconst GET_FULLNAME_SUCCES = 'GET_FULLNAME_SUCCES'\r\nconst GET_FULLNAME_ERROR = 'GET_FULLNAME_ERROR'\r\n\r\nexport const userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_FULLNAME_LOADING:\r\n      return { ...state, isLoading: true }\r\n    case GET_FULLNAME_SUCCES:\r\n      return { ...state, isLoading: false, fullName: payload }\r\n    case GET_FULLNAME_ERROR:\r\n      return { ...initialState, isFailed: true }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const getFullNameUser = (token) => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_FULLNAME_LOADING\r\n  })\r\n  try {\r\n    if (token) {\r\n      const response = await getFullName(token)\r\n      const { name, lastname } = response.data.message\r\n      dispatch({\r\n        type: GET_FULLNAME_SUCCES,\r\n        payload: `${name} ${lastname}`\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: GET_FULLNAME_ERROR\r\n      })\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_FULLNAME_ERROR\r\n    })\r\n  }\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport persistData from 'redux-localstorage'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { authReducer } from './authDucks'\r\nimport { patientReducer } from './patientDucks'\r\nimport { userReducer } from './userDucks'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  patient: patientReducer\r\n})\r\n\r\nconst composeEnhancers = composeWithDevTools(\r\n  applyMiddleware(thunk),\r\n  persistData('auth')\r\n)\r\n\r\nexport default function generateStore() {\r\n  const store = createStore(rootReducer, composeEnhancers)\r\n  return store\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar.e84d0708.svg\";","import { useState } from 'react'\r\n\r\nconst useDropdown = (initialState) => {\r\n  const [isDropdownOpen, setDropdownOpen] = useState(initialState)\r\n\r\n  const openDropdown = () => setDropdownOpen(true)\r\n\r\n  const closeDropdown = () => setDropdownOpen(false)\r\n\r\n  const toggleDropdown = () => setDropdownOpen((c) => !c)\r\n\r\n  return {\r\n    isDropdownOpen,\r\n    toggleDropdown,\r\n    openDropdown,\r\n    closeDropdown\r\n  }\r\n}\r\n\r\nexport default useDropdown\r\n","const capitalize = string => {\r\n  return string.replace(/(^|\\s)([a-z])/g, (m, p1, p2) => {\r\n    return p1 + p2.toUpperCase()\r\n  })\r\n}\r\n\r\nexport default capitalize\r\n","import PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst DropdownStyled = styled.div`\r\n  position: absolute;\r\n  top: 120%;\r\n  right: 0;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 0px 6px #ccc;\r\n  padding: 20px;\r\n  background-color: white;\r\n  transition: 300ms all;\r\n  width: 150px;\r\n  cursor: default;\r\n  .titleOptions {\r\n    color: gray;\r\n    font-size: 12px;\r\n    margin-bottom: 5px;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n    li * {\r\n      cursor: pointer;\r\n      font-weight: 500;\r\n      transition: 300ms all;\r\n      color: black;\r\n      text-decoration: none;\r\n    }\r\n    li *:hover {\r\n      color: #093b32;\r\n    }\r\n  }\r\n`\r\n\r\nconst Dropdown = ({ children, title, isDropdownOpen }) => {\r\n  return (\r\n    <>\r\n      {isDropdownOpen && (\r\n        <DropdownStyled>\r\n          <p className=\"titleOptions\">{title}</p>\r\n          <ul>{children}</ul>\r\n        </DropdownStyled>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nDropdown.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  isDropdownOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Dropdown\r\n","import PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst DropdownOptionStyled = styled.li`\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  &:hover {\r\n    color: #093b32;\r\n  }\r\n`\r\nconst DropdownOption = ({ children, action }) => {\r\n  return (\r\n    <DropdownOptionStyled onClick={action}>{children}</DropdownOptionStyled>\r\n  )\r\n}\r\n\r\nDropdownOption.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  action: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DropdownOption\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport { useEffect } from 'react'\r\nimport OutsideClickHandler from 'react-outside-click-handler'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport avatar from '../../assets/img/avatar.svg'\r\nimport useDropdown from '../../hooks/useDropdown'\r\nimport { getFullNameUser } from '../../redux/userDucks'\r\nimport capitalize from '../../utils/capitalize'\r\nimport Dropdown from './Dropdown'\r\nimport DropdownOption from './DropdownOption'\r\nimport useAuth from '../../hooks/useAuth'\r\n\r\nconst HeaderProfileStyled = styled.div`\r\n  position: relative;\r\n  .profile {\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 5px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .profileFullName {\r\n    display: none;\r\n  }\r\n  @media (min-width: 768px) {\r\n    .profileFullName {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\nconst HeaderProfile = () => {\r\n  const { logoutUser, tokenJWT } = useAuth()\r\n  const { isDropdownOpen, toggleDropdown, closeDropdown } = useDropdown(false)\r\n  const dispatch = useDispatch()\r\n  const fullName = useSelector(store => store.user.fullName) || ''\r\n\r\n  const handleDropdown = () => {\r\n    toggleDropdown()\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getFullNameUser(tokenJWT))\r\n  }, [dispatch, tokenJWT])\r\n\r\n  return (\r\n    <HeaderProfileStyled>\r\n      <OutsideClickHandler onOutsideClick={closeDropdown}>\r\n        <div className=\"profile\" onClick={handleDropdown}>\r\n          <p className=\"profileFullName\">{capitalize(fullName)}</p>\r\n          <img src={avatar} alt=\"Avatar to user\" />\r\n        </div>\r\n        <Dropdown isDropdownOpen={isDropdownOpen} title=\"Opciones\">\r\n          <DropdownOption action={() => logoutUser()}>\r\n            Cerrar sesión\r\n          </DropdownOption>\r\n        </Dropdown>\r\n      </OutsideClickHandler>\r\n    </HeaderProfileStyled>\r\n  )\r\n}\r\n\r\nexport default HeaderProfile\r\n","/* eslint-disable react/require-default-props */\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport HeaderProfile from './HeaderProfile'\r\n\r\nconst HeaderStyled = styled.header`\r\n  display: grid;\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 60px;\r\n  padding: 10px 0;\r\n  background-color: var(--background-box-color);\r\n  box-shadow: var(--box-shadow-default);\r\n  .wrapperHeader {\r\n    padding: 0px 20px;\r\n    margin: 0 auto;\r\n    display: inherit;\r\n    justify-content: inherit;\r\n    align-items: inherit;\r\n    width: inherit;\r\n  }\r\n  .containerHeader {\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    grid-gap: 20px;\r\n\r\n    .logo {\r\n      width: 100%;\r\n      font-weight: 600;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n  .logoutTesting {\r\n    cursor: pointer;\r\n  }\r\n  .dropdownHeader {\r\n    display: none;\r\n    position: fixed;\r\n    right: 50px;\r\n    top: 50px;\r\n  }\r\n  .contentHeader {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n`\r\nconst Header = ({ children }) => {\r\n  return (\r\n    <HeaderStyled>\r\n      <div className=\"wrapperHeader\">\r\n        <div className=\"containerHeader\">\r\n          <div className=\"contentHeader\">{children}</div>\r\n          <HeaderProfile />\r\n        </div>\r\n      </div>\r\n    </HeaderStyled>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\nimport Header from '../../components/Common/Header'\r\n\r\nconst HomeStyled = styled.div`\r\n  min-height: 100vh;\r\n  .homeContent {\r\n    padding: 10px;\r\n  }\r\n`\r\nconst Home = () => {\r\n  return (\r\n    <HomeStyled>\r\n      <Header />\r\n      <div className=\"homeContent\">\r\n        <h1>Home</h1>\r\n      </div>\r\n    </HomeStyled>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable react/require-default-props */\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst InputStyled = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  gap: 5px;\r\n  label {\r\n    width: 100%;\r\n    color: #6c6c6c;\r\n    font-size: 14px;\r\n  }\r\n  .inputContainer {\r\n    width: 100%;\r\n    padding: 7.5px 20px;\r\n    background-color: var(--background-box-color);\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.15);\r\n  }\r\n  .inputError {\r\n    border-bottom: 1px solid red;\r\n  }\r\n  .labelError {\r\n    color: red;\r\n  }\r\n  .errorMessage {\r\n    font-size: 12px;\r\n    color: red;\r\n    width: 100%;\r\n    padding: 0 0 0 20px;\r\n  }\r\n`\r\nconst Input = ({ label, error, touched, ...rest }) => {\r\n  return (\r\n    <InputStyled>\r\n      <label className={error && touched && 'labelError'} htmlFor={label}>\r\n        {label} {error && touched && `- ${error}`}\r\n      </label>\r\n      <input\r\n        className={`inputContainer ${error && touched && 'inputError'}`}\r\n        {...rest}\r\n      />\r\n    </InputStyled>\r\n  )\r\n}\r\n\r\nInput.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  touched: PropTypes.bool,\r\n  disabled: PropTypes.string\r\n}\r\n\r\nexport default Input\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-console */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable react/require-default-props */\r\nimport styled from 'styled-components'\r\n\r\nconst ButtonDefault = styled.button`\r\n  width: ${(props) => (props.width ? props.width : '100%')};\r\n  margin: ${(props) => (props.margin ? props.margin : '0')};\r\n  max-width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  padding: 7.5px 20px;\r\n  background: var(--main-color);\r\n  color: var(--text-white-color);\r\n  box-shadow: var(--box-shadow-short);\r\n  &:hover {\r\n    background: var(--secundary-color);\r\n  }\r\n`\r\nconst ButtonError = styled(ButtonDefault)`\r\n  background: var(--error-color);\r\n  &:hover {\r\n    background: var(--error-color);\r\n  }\r\n`\r\nconst ButtonIcon = styled(ButtonDefault)`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n`\r\nconst ButtonIconError = styled(ButtonIcon)`\r\n  background: var(--error-color);\r\n  &:hover {\r\n    background: var(--error-color);\r\n  }\r\n`\r\nconst Button = ({ action, children, type, ...rest }) => {\r\n  const switchButton = (buttonType) => {\r\n    switch (buttonType){\r\n      case 'button':\r\n        return <ButtonDefault onClick={action} type={type} {...rest}>{children}</ButtonDefault>\r\n      case 'submit':\r\n        return <ButtonDefault onClick={action} type={type} {...rest}>{children}</ButtonDefault>\r\n      case 'buttonError':\r\n        return <ButtonError onClick={action} type={type} {...rest}>{children}</ButtonError>\r\n      case 'buttonIcon':\r\n        return <ButtonIcon onClick={action} type={type} {...rest}>{children}</ButtonIcon>\r\n      case 'buttonIconError':\r\n        return <ButtonIconError onClick={action} type={type} {...rest}>{children}</ButtonIconError>\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n  return switchButton(type)\r\n}\r\n\r\nexport default Button","import * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router'\r\nimport { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Input from '../Common/Input'\r\nimport Button from '../Common/Button'\r\nimport useAuth from '../../hooks/useAuth'\r\n\r\nconst LoginFormStyled = styled.div`\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  background-color: var(--background-box-color);\r\n  box-shadow: var(--box-shadow-default);\r\n  form {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 20px;\r\n  }\r\n  .loginTitle {\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n  }\r\n  .loginFailed {\r\n    padding-bottom: 10px;\r\n    color: red;\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .loginTitle {\r\n      font-size: 36px;\r\n    }\r\n  }\r\n`\r\nconst LoginForm = () => {\r\n  const history = useHistory()\r\n  const { isAuth, isAuthFailed, isAuthLoading, loginUser } = useAuth()\r\n  const initialValues = { email: '', password: '' }\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalido').required('Obligatorio'),\r\n    password: Yup.string().required('Obligatorio')\r\n  })\r\n  const onSubmit = user => loginUser(user)\r\n  const formik = useFormik({ initialValues, validationSchema, onSubmit })\r\n\r\n  useEffect(() => {\r\n    if (isAuth) history.push('/')\r\n  }, [isAuth, history])\r\n\r\n  return (\r\n    <LoginFormStyled>\r\n      <p className=\"loginTitle\">Inicia sesión</p>\r\n      {isAuthFailed && (\r\n        <p className=\"loginFailed\">Correo y contraseña incorrectos</p>\r\n      )}\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Input\r\n          label=\"Correo electrónico\"\r\n          name=\"email\"\r\n          placeholder=\"example@example.com\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n          error={formik.errors.email}\r\n          touched={formik.touched.email}\r\n        />\r\n        <Input\r\n          label=\"Contraseña\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"······\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.password}\r\n          error={formik.errors.password}\r\n          touched={formik.touched.password}\r\n        />\r\n        <Button type=\"submit\">\r\n          {isAuthLoading ? 'Cargando...' : 'Iniciar sesión'}\r\n        </Button>\r\n      </form>\r\n    </LoginFormStyled>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","/* eslint-disable react/require-default-props */\r\nimport styled from 'styled-components'\r\nimport LoginForm from '../../components/Forms/LoginForm'\r\n\r\nconst LoginStyled = styled.div`\r\n  display: grid;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  padding: 20px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f8f8fb;\r\n  .loginPageContainer {\r\n    display: grid;\r\n    grid-template-columns: minmax(auto, 370px);\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n  .loginWelcome {\r\n    display: none;\r\n    gap: 12px;\r\n  }\r\n  .loginWelcome h1 {\r\n    font-size: 30px;\r\n  }\r\n  .loginWelcome p {\r\n    font-size: 16px;\r\n    color: #52575c;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    .loginWelcome {\r\n      display: grid;\r\n    }\r\n    .loginWelcome h1 {\r\n      font-size: 36px;\r\n    }\r\n    .loginWelcome p {\r\n      font-size: 20px;\r\n    }\r\n    .loginPageContainer {\r\n      grid-template-columns: 1fr minmax(auto, 370px);\r\n      gap: 20px;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    .loginWelcome h1 {\r\n      font-size: 50px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Login = () => {\r\n  return (\r\n    <LoginStyled>\r\n      <div className=\"wrapper\">\r\n        <div className=\"loginPageContainer\">\r\n          <div className=\"loginWelcome\">\r\n            <h1>Bienvenidos a SMedit</h1>\r\n            <p>\r\n              Software que permite a sus doctores administrar pacientes y\r\n              agendas agendas cual sea su especialidad, proporcionando comodas.\r\n            </p>\r\n          </div>\r\n          <LoginForm />\r\n        </div>\r\n      </div>\r\n    </LoginStyled>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","export default __webpack_public_path__ + \"static/media/magnifyingGlass.639df9d3.svg\";","import genService from '../utils/genService'\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const getPatientListService = (token, amount, page) => {\r\n  let url = `${baseUrl}/patient/find/${amount}`\r\n  if (page) {\r\n    url += `/${page}`\r\n  }\r\n  return genService(url, 'get', token, undefined)\r\n}\r\n\r\nexport const getPatientService = (token, id) => {\r\n  const url = `${baseUrl}/patient/${id}`\r\n  return genService(url, 'get', token, undefined)\r\n}\r\n\r\nexport const savePatientService = (token, patient) => {\r\n  const url = `${baseUrl}/patient`\r\n  return genService(url, 'post', token, patient)\r\n}\r\n\r\nexport const updatePatientService = (token, id, patientUpdate) => {\r\n  const url = `${baseUrl}/patient/${id}`\r\n  return genService(url, 'put', token, patientUpdate)\r\n}\r\n\r\nexport const deletePatientService = (token, id) => {\r\n  const url = `${baseUrl}/patient/${id}`\r\n  return genService(url, 'delete', token, undefined)\r\n}\r\n","/* eslint-disable no-console */\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  getPatientListService,\r\n  getPatientService,\r\n  savePatientService,\r\n  deletePatientService\r\n} from '../services/patient'\r\nimport {\r\n  actionGetPatient,\r\n  actionPostPatient,\r\n  actionDeletePatient,\r\n  actionGetPatientList,\r\n  actionFilteredPatientByName\r\n} from '../redux/patientDucks'\r\n\r\nconst usePatient = () => {\r\n  const dispatch = useDispatch()\r\n  const patientList = useSelector(store => store.patient.patientList)\r\n  const patientListByName = useSelector(\r\n    store => store.patient.patientListByName\r\n  )\r\n  const patientObtainedById = useSelector(\r\n    store => store.patient.patientObtainedById\r\n  )\r\n  const isLoading = useSelector(store => store.patient.isLoading)\r\n\r\n  const getPatientList = async (token, amount, page) => {\r\n    dispatch(actionGetPatientList.loading())\r\n    try {\r\n      if (token) {\r\n        const result = await getPatientListService(token, amount, page)\r\n        const patients = result.data.message\r\n        dispatch(actionGetPatientList.success(patients))\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      dispatch(actionGetPatientList.error())\r\n    }\r\n  }\r\n\r\n  const getPatient = async (token, id) => {\r\n    dispatch(actionGetPatient.loading())\r\n    try {\r\n      const result = await getPatientService(token, id)\r\n      const { patient } = result.data.message\r\n      dispatch(actionGetPatient.success(patient))\r\n    } catch (e) {\r\n      console.log(e)\r\n      dispatch(actionGetPatient.error())\r\n    }\r\n  }\r\n\r\n  const createPatient = async (token, newPatient) => {\r\n    dispatch(actionPostPatient.loading())\r\n    try {\r\n      if (token) {\r\n        const result = await savePatientService(token, newPatient)\r\n        const { patient } = result.data.message\r\n        dispatch(actionPostPatient.success(patient))\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      dispatch(actionPostPatient.error())\r\n    }\r\n  }\r\n\r\n  const deletePatient = async (token, id) => {\r\n    dispatch(actionDeletePatient.loading())\r\n    try {\r\n      if (token) {\r\n        await deletePatientService(token, id)\r\n        dispatch(actionDeletePatient.success(id))\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      dispatch(actionDeletePatient.error())\r\n    }\r\n  }\r\n\r\n  const searchPatientByName = name => {\r\n    dispatch(actionFilteredPatientByName(name))\r\n  }\r\n\r\n  return {\r\n    patientList,\r\n    patientListByName,\r\n    patientObtainedById,\r\n    isLoading,\r\n    getPatientList,\r\n    getPatient,\r\n    createPatient,\r\n    deletePatient,\r\n    searchPatientByName\r\n  }\r\n}\r\n\r\nexport default usePatient\r\n","import { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport lens from '../../assets/img/magnifyingGlass.svg'\r\nimport usePatient from '../../hooks/usePatient'\r\n\r\nconst SearchStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 25px 1fr;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 7.5px 20px;\r\n  border-radius: 20px;\r\n  box-shadow: var(--box-shadow-short);\r\n  input::placeholder {\r\n    color: var(--gray-color);\r\n  }\r\n  input {\r\n    width: 100%;\r\n    color: var(--black-color);\r\n  }\r\n`\r\nconst Search = () => {\r\n  const [inputValue, setInputValue] = useState('')\r\n  const { searchPatientByName } = usePatient()\r\n\r\n  const handleSearch = (e) => {\r\n    const quest = e.target.value\r\n    setInputValue(quest)\r\n    searchPatientByName(quest)\r\n  }\r\n\r\n  return (\r\n    <SearchStyled>\r\n      <img src={lens} alt=\"magnifying glass\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Buscar\"\r\n        value={inputValue}\r\n        onChange={handleSearch}\r\n      />\r\n    </SearchStyled>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import { useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst ModalStyled = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1001;\r\n  padding: 20px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst ModalWindow = styled.div`\r\n  background: #ffffff;\r\n  box-shadow: rgb(0 0 0 / 20%) 0px 0px 10px 0px;\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  overflow-y: scroll;\r\n  cursor: default;\r\n  max-width: 90%;\r\n  max-height: 90%;\r\n  .modalContainer {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    gap: 10px;\r\n  }\r\n  .modalTitle {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n  .modalBody {\r\n    /*  */\r\n  }\r\n  .modalButtons {\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n`\r\n\r\n/*\r\n    |￣￣￣￣￣\r\n    | // TODO: Improve this\r\n    |＿＿＿_\r\n(\\__/)||\r\n(•ㅅ•)||\r\n/  づ\r\n*/\r\n\r\nconst ModalContainer = document.getElementById('modalContainer')\r\n\r\nconst Modal = ({ children, isModalOpen, setModalOpen }) => {\r\n  const modalbackground = useRef(null)\r\n  const handleModal = (e) => {\r\n    if (modalbackground.current === e.target) {\r\n      setModalOpen(false)\r\n    }\r\n  }\r\n\r\n  if (isModalOpen) {\r\n    return ReactDOM.createPortal(\r\n      <ModalStyled ref={modalbackground} onClick={handleModal}>\r\n        <ModalWindow>{children}</ModalWindow>\r\n      </ModalStyled>,\r\n      ModalContainer\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  isModalOpen: PropTypes.bool,\r\n  setModalOpen: PropTypes.func\r\n}\r\n\r\nexport default Modal\r\n","import { useState } from 'react'\r\n\r\nconst useModal = () => {\r\n  const [isModalOpen, setModalOpen] = useState(false)\r\n\r\n  const openModal = () => setModalOpen(true)\r\n  const closeModal = () => setModalOpen(false)\r\n  const toggleModal = () => setModalOpen((c) => !c)\r\n\r\n  return { isModalOpen, setModalOpen, openModal, closeModal, toggleModal }\r\n}\r\n\r\nexport default useModal\r\n","/* eslint-disable react/prop-types */\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router'\r\nimport Modal from './Modal'\r\nimport useModal from '../../hooks/useModal'\r\nimport Button from './Button'\r\nimport usePatient from '../../hooks/usePatient'\r\nimport useAuth from '../../hooks/useAuth'\r\n\r\nconst PatientStyled = styled.div`\r\n  width: 690px;\r\n  display: grid;\r\n  grid-template-columns: 160px 200px 100px 100px 60px;\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n  padding: 20px;\r\n  &:hover {\r\n    background-color: var(--gray-light-color);\r\n  }\r\n  & span {\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    &::-webkit-scrollbar {\r\n      width: 4px;\r\n      height: 4px;\r\n    }\r\n  }\r\n  @media (min-width: 768px) {\r\n    width: 100%;\r\n    grid-template-columns: 1.6fr 2fr 1fr 1fr 0.6fr;\r\n  }\r\n`\r\nconst Patient = ({ _id, name, lastname, email, DNI, phone }) => {\r\n  const history = useHistory()\r\n  const { tokenJWT } = useAuth()\r\n  const { deletePatient } = usePatient()\r\n  const { isModalOpen, openModal, setModalOpen } = useModal()\r\n\r\n  const handleClickPatient = () => {\r\n    history.push(`/paciente/${_id}`)\r\n  }\r\n\r\n  const handleDeletePatient = e => {\r\n    e.stopPropagation()\r\n    openModal()\r\n  }\r\n\r\n  return (\r\n    <PatientStyled id={_id} onDoubleClick={handleClickPatient}>\r\n      <span>{`${name} ${lastname}`}</span>\r\n      <span>{email}</span>\r\n      <span>{DNI}</span>\r\n      <span>{phone}</span>\r\n      <Button type=\"buttonIconError\" action={handleDeletePatient}>\r\n        X\r\n      </Button>\r\n\r\n      <Modal isModalOpen={isModalOpen} setModalOpen={setModalOpen}>\r\n        <div className=\"modalContainer\">\r\n          <div className=\"modalTitle\">\r\n            <p>\r\n              ¿Estas seguro de eliminar el paciente {name} {lastname}?\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"modalBody\">\r\n            <p>\r\n              Recuerda que se eliminaran sus documentos y puede ser perjudicial.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"modalButtons\">\r\n            <Button type=\"button\" action={() => deletePatient(tokenJWT, _id)}>\r\n              Eliminar\r\n            </Button>\r\n            <Button type=\"buttonError\" action={() => setModalOpen(false)}>\r\n              Cancelar\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </PatientStyled>\r\n  )\r\n}\r\n\r\nexport default Patient\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport useAuth from '../../hooks/useAuth'\r\nimport usePatient from '../../hooks/usePatient'\r\nimport Patient from '../Common/Patient'\r\n\r\nconst PatientListStyled = styled.div`\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  background-color: #ffffff;\r\n  box-shadow: var(--box-shadow-default);\r\n  overflow-x: scroll;\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n    height: 5px;\r\n  }\r\n  .patientListTitles {\r\n    width: 690px;\r\n    display: grid;\r\n    grid-template-columns: 160px 200px 100px 100px 60px;\r\n    align-items: center;\r\n    grid-gap: 10px;\r\n    padding: 20px;\r\n    border-bottom: 1px solid var(--gray-color);\r\n    & span {\r\n      font-weight: 500;\r\n    }\r\n    @media (min-width: 768px) {\r\n      width: 100%;\r\n      grid-template-columns: 1.6fr 2fr 1fr 1fr 0.6fr;\r\n    }\r\n  }\r\n  .patientListEmpty {\r\n    width: 690px;\r\n    text-align: center;\r\n    padding: 20px;\r\n  }\r\n  .hidden {\r\n    visibility: hidden;\r\n  }\r\n`\r\nconst PatientList = () => {\r\n  const { tokenJWT } = useAuth()\r\n  const { patientList, patientListByName, getPatientList } = usePatient()\r\n  const isPatientListEmpty = !patientList.length\r\n  const list = patientListByName.length > 0 ? patientListByName : patientList\r\n  const patientListHTML = list.map(patient => {\r\n    return <Patient key={patient._id} {...patient} />\r\n  })\r\n  useEffect(() => {\r\n    getPatientList(tokenJWT, 10, 1)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tokenJWT])\r\n  return (\r\n    <PatientListStyled>\r\n      <div className=\"patientListTitles\">\r\n        <span>Nombres</span>\r\n        <span>Correo electrónico</span>\r\n        <span>Cedula</span>\r\n        <span>Teléfono</span>\r\n        <span className=\"hidden\">.</span>\r\n      </div>\r\n\r\n      {isPatientListEmpty ? (\r\n        <p className=\"patientListEmpty\">Aún no se ah ingresado pacientes</p>\r\n      ) : (\r\n        patientListHTML\r\n      )}\r\n    </PatientListStyled>\r\n  )\r\n}\r\n\r\nexport default PatientList\r\n","import styled from 'styled-components'\r\nimport { useHistory } from 'react-router'\r\nimport Header from '../../components/Common/Header'\r\nimport Search from '../../components/Common/Search'\r\nimport Button from '../../components/Common/Button'\r\nimport PatientList from '../../components/Lists/PatientList'\r\n\r\nconst PatientStyled = styled.div`\r\n  min-height: 100vh;\r\n  .patientContent {\r\n    padding: 25px 15px;\r\n    @media (min-width: 768px) {\r\n      padding: 25px 20px;\r\n    }\r\n  }\r\n`\r\nconst Patient = () => {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <PatientStyled>\r\n      <Header>\r\n        <Search />\r\n      </Header>\r\n      <div className=\"patientContent\">\r\n        <Button\r\n          type=\"button\"\r\n          action={() => history.push('/nuevo/paciente')}\r\n          width=\"200px\"\r\n          margin=\"0 0 15px 0\"\r\n        >\r\n          Nuevo Paciente\r\n        </Button>\r\n        <PatientList />\r\n      </div>\r\n    </PatientStyled>\r\n  )\r\n}\r\n\r\nexport default Patient\r\n","export default __webpack_public_path__ + \"static/media/addImage.5ca8587f.svg\";","/* eslint-disable react/prop-types */\r\nimport { useState, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from '../Common/Button'\r\nimport addImage from '../../assets/img/addImage.svg'\r\n\r\nconst PatientPhotoFormStyled = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  /* height: 250px; */\r\n  min-height: 250px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  /* margin: 0 auto; */\r\n  overflow: hidden;\r\n  box-shadow: var(--box-shadow-default);\r\n  label {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: var(--main-color);\r\n    background-image: ${props => (props.image ? `url(${props.image})` : null)};\r\n    background-position: center;\r\n    background-size: cover;\r\n    cursor: pointer;\r\n  }\r\n  label:hover {\r\n    background-color: var(--secundary-color);\r\n  }\r\n  input {\r\n    display: none;\r\n  }\r\n  .buttonDeleteImage {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n  }\r\n  .addImageTips img {\r\n    width: 30%;\r\n  }\r\n  .addImageText {\r\n    color: var(--text-white-color)\r\n  }\r\n  .addImageText span {\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n  }\r\n`\r\nconst PatientPhotoForm = ({ onchange, value, error, touched }) => {\r\n  const [file, setFile] = useState(null)\r\n  const refAddImage = useRef(null)\r\n  const handleAddImage = e => {\r\n    e.preventDefault()\r\n    const image = refAddImage.current.files[0]\r\n    if (image) setFile(URL.createObjectURL(image))\r\n  }\r\n  const handleDeleteImage = e => {\r\n    e.stopPropagation()\r\n    setFile(null)\r\n  }\r\n  return (\r\n    <PatientPhotoFormStyled image={file}>\r\n      {file && (\r\n        <Button\r\n          className=\"buttonDeleteImage\"\r\n          type=\"buttonIconError\"\r\n          action={handleDeleteImage}\r\n        >\r\n          X\r\n        </Button>\r\n      )}\r\n      <label htmlFor=\"image\" onChange={handleAddImage}>\r\n        {!file && (\r\n          <div className=\"addImageTips\">\r\n            <img src={addImage} alt=\"images\" />\r\n            <p className=\"addImageText\">\r\n              <span>Agregar imagen</span>\r\n              <br />o arrastra y suelta\r\n            </p>\r\n          </div>\r\n        )}\r\n        <input\r\n          ref={refAddImage}\r\n          type=\"file\"\r\n          name=\"image\"\r\n          id=\"image\"\r\n          onChange={onchange}\r\n          value={value}\r\n          error={error}\r\n          touched={Boolean(touched)}\r\n        />\r\n      </label>\r\n    </PatientPhotoFormStyled>\r\n  )\r\n}\r\n\r\nexport default PatientPhotoForm\r\n","/* eslint-disable no-console */\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\n// import { useHistory } from 'react-router'\r\n// import useAuth from '../hooks/useAuth'\r\n// import usePatient from '../hooks/usePatient'\r\nimport styled from 'styled-components'\r\nimport Input from '../Common/Input'\r\nimport Button from '../Common/Button'\r\nimport PatientPhotoForm from './PatientPhotoForm'\r\n// import cleanObject from '../utils/cleanObject'\r\n\r\nconst PatientFormStyled = styled.div`\r\n  width: 100%;\r\n  form {\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    @media (min-width: 634px) {\r\n      grid-template-columns: 1fr 1fr;\r\n      gap: 25px;\r\n    }\r\n    @media (min-width: 1024px) {\r\n      grid-template-columns: 1fr 2fr;\r\n      gap: 25px;\r\n    }\r\n  }\r\n  .inputListContainer {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 10px;\r\n    @media (min-width: 1024px) {\r\n    }\r\n  }\r\n  .inputListTitle {\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n`\r\nconst PatientForm = () => {\r\n  // const history = useHistory()\r\n  // const { createPatient } = usePatient()\r\n  // const { tokenJWT } = useAuth()\r\n  const initialValues = {\r\n    image: '',\r\n    name: '',\r\n    lastname: '',\r\n    DNI: '',\r\n    DNIRepresentative: '',\r\n    gender: '',\r\n    birth: ''\r\n  }\r\n  const validationSchema = Yup.object({\r\n    image: Yup.string(),\r\n    name: Yup.string().required('Obligatorio'),\r\n    lastname: Yup.string().required('Obligatorio'),\r\n    DNI: Yup.string()\r\n      .min(10, 'Solo 10 digitos')\r\n      .max(11, 'Solo 10 digitos')\r\n      .required('Obligatorio'),\r\n    DNIRepresentative: Yup.string(),\r\n    gender: Yup.string(),\r\n    birth: Yup.date()\r\n  })\r\n  const onSubmit = async newPatient => {\r\n    console.log(newPatient)\r\n    // console.log(cleanObject(newPatient))\r\n    // const createdPatient = await createPatient(tokenJWT, newPatient)\r\n    // if (createdPatient) history.push('/pacientes')\r\n  }\r\n  const formik = useFormik({ initialValues, validationSchema, onSubmit })\r\n  return (\r\n    <PatientFormStyled>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <PatientPhotoForm\r\n          onchange={formik.handleChange}\r\n          value={formik.values.image}\r\n          error={formik.errors.image}\r\n          touched={formik.touched.image}\r\n        />\r\n        <div className=\"inputList\">\r\n          <h3 className=\"inputListTitle\">Información Basica</h3>\r\n          <div className=\"inputListContainer\">\r\n            <Input\r\n              label=\"Nombre\"\r\n              name=\"name\"\r\n              placeholder=\"Lionel\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.name}\r\n              error={formik.errors.name}\r\n              touched={formik.touched.name}\r\n            />\r\n            <Input\r\n              label=\"Apellidos\"\r\n              name=\"lastname\"\r\n              placeholder=\"Cuccittini\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.lastname}\r\n              error={formik.errors.lastname}\r\n              touched={formik.touched.lastname}\r\n            />\r\n            <Input\r\n              label=\"Cedula\"\r\n              name=\"DNI\"\r\n              placeholder=\"0999999999\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.DNI}\r\n              error={formik.errors.DNI}\r\n              touched={formik.touched.DNI}\r\n            />\r\n            <Input\r\n              label=\"Cedula Representante\"\r\n              name=\"DNIRepresentative\"\r\n              placeholder=\"0999999999\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.DNIRepresentative}\r\n              error={formik.errors.DNIRepresentative}\r\n              touched={formik.touched.DNIRepresentative}\r\n            />\r\n            <Input\r\n              label=\"Genero\"\r\n              name=\"gender\"\r\n              placeholder=\"Femenino\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.gender}\r\n              error={formik.errors.gender}\r\n              touched={formik.touched.gender}\r\n            />\r\n            <Input\r\n              label=\"F. nacimiento\"\r\n              name=\"birth\"\r\n              placeholder=\"11/01/2001\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.birth}\r\n              error={formik.errors.birth}\r\n              touched={formik.touched.birth}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\">Guardar</Button>\r\n      </form>\r\n    </PatientFormStyled>\r\n  )\r\n}\r\n\r\nexport default PatientForm\r\n","import styled from 'styled-components'\r\nimport Header from '../../components/Common/Header'\r\nimport PatientForm from '../../components/Forms/PatientForm'\r\n\r\nconst PatientNewStyled = styled.div`\r\n  min-height: 100vh;\r\n  .patientNewContent {\r\n    display: grid;\r\n    align-items: center;\r\n    gap: 10px;\r\n    padding: 25px 15px;\r\n    @media (min-width: 768px) {\r\n      padding: 25px 20px;\r\n    }\r\n  }\r\n`\r\nconst PatientNew = () => {\r\n  return (\r\n    <PatientNewStyled>\r\n      <Header />\r\n      <div className=\"patientNewContent\">\r\n        <PatientForm />\r\n      </div>\r\n    </PatientNewStyled>\r\n  )\r\n}\r\n\r\nexport default PatientNew\r\n","import styled from 'styled-components'\r\nimport Header from '../../components/Common/Header'\r\n\r\nconst ScheduleStyled = styled.div`\r\n  min-height: 100vh;\r\n  .scheduleContent {\r\n    padding: 10px;\r\n  }\r\n`\r\nconst Schedule = () => {\r\n  return (\r\n    <ScheduleStyled>\r\n      <Header />\r\n      <div className=\"scheduleContent\">\r\n        <h1>Schedule</h1>\r\n      </div>\r\n    </ScheduleStyled>\r\n  )\r\n}\r\n\r\nexport default Schedule\r\n","import { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport './App.css'\r\nimport Layout from './components/Common/Layout'\r\nimport PrivateRoute from './components/Router/PrivateRoute'\r\nimport generateStore from './redux/store'\r\nimport { Login, Home, Patient, PatientNew, Schedule } from './pages'\r\n\r\nconst App = () => {\r\n  const store = generateStore()\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Layout>\r\n            <PrivateRoute exact path=\"/\" component={Home} />\r\n            <PrivateRoute exact path=\"/pacientes\" component={Patient} />\r\n            <PrivateRoute exact path=\"/nuevo/paciente\" component={PatientNew} />\r\n            {/* <PrivateRoute\r\n              exact\r\n              path=\"/patient/:id\"\r\n              component={PatientDetail}\r\n            /> */}\r\n            <PrivateRoute exact path=\"/agenda\" component={Schedule} />\r\n          </Layout>\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import styled from 'styled-components'\r\n\r\nconst Error404Styled = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst Error404 = () => {\r\n  return (\r\n    <Error404Styled>\r\n      <h1>Error 404 | Ruta no especificada</h1>\r\n    </Error404Styled>\r\n  )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}